Step,Command,Description
1.1,"sudo apt update","Update system package list"
1.2,"sudo apt upgrade -y","Upgrade system packages"
1.3,"curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh | bash","Install NVM (Node Version Manager)"
1.4,"source ~/.bashrc","Reload shell configuration"
1.5,"nvm install 18","Install Node.js 18 (LTS version)"
1.6,"nvm use 18","Set Node.js 18 as default"
1.7,"sudo apt install mysql-server -y","Install MySQL server"
1.8,"sudo apt install git -y","Install Git"
1.9,"npm install -g pm2","Install PM2 globally"
2.1,"sudo mysql_secure_installation","Secure MySQL installation"
2.2,"sudo mysql -u root -p","Access MySQL as root"
2.3,"CREATE DATABASE member_registration;","Create database"
2.4,"CREATE USER 'member_user'@'localhost' IDENTIFIED BY 'your_secure_password';","Create database user"
2.5,"GRANT ALL PRIVILEGES ON member_registration.* TO 'member_user'@'localhost';","Grant privileges"
2.6,"FLUSH PRIVILEGES;","Apply privilege changes"
2.7,"EXIT;","Exit MySQL"
3.1,"mkdir /var/www","Create project directory"
3.2,"cd /var/www","Change to project directory"
3.3,"git clone your-repository-url member-registration-form","Clone repository"
3.4,"cd member-registration-form","Change to project directory"
3.5,"npm install","Install project dependencies"
3.6,"mkdir -p uploads/cvs","Create uploads directory"
3.7,"chmod 755 uploads/cvs","Set directory permissions"
4.1,"nano .env","Create environment file"
4.2,"DB_HOST=localhost","Set database host"
4.3,"DB_USER=member_user","Set database user"
4.4,"DB_PASSWORD=your_secure_password","Set database password"
4.5,"DB_NAME=member_registration","Set database name"
4.6,"PORT=3000","Set application port"
4.7,"NODE_ENV=production","Set environment"
5.1,"node config/init-db.js","Initialize database"
6.1,"sudo apt install nginx -y","Install Nginx"
6.2,"sudo nano /etc/nginx/sites-available/member-registration","Create Nginx configuration"
6.3,"sudo ln -s /etc/nginx/sites-available/member-registration /etc/nginx/sites-enabled/","Enable site"
6.4,"sudo rm /etc/nginx/sites-enabled/default","Remove default site"
6.5,"sudo nginx -t","Test Nginx configuration"
6.6,"sudo systemctl restart nginx","Restart Nginx"
7.1,"cd /var/www/member-registration-form","Change to project directory"
7.2,"pm2 start app.js --name 'member-registration'","Start application"
7.3,"pm2 save","Save PM2 process list"
7.4,"pm2 startup","Setup PM2 to start on boot"
8.1,"sudo apt install certbot python3-certbot-nginx -y","Install Certbot"
8.2,"sudo certbot --nginx -d your_domain.com","Get SSL certificate"
9.1,"sudo apt install ufw -y","Install UFW firewall"
9.2,"sudo ufw allow ssh","Allow SSH"
9.3,"sudo ufw allow http","Allow HTTP"
9.4,"sudo ufw allow https","Allow HTTPS"
9.5,"sudo ufw enable","Enable firewall"
9.6,"sudo chown -R $USER:$USER /var/www/member-registration-form","Set ownership"
9.7,"sudo chmod -R 755 /var/www/member-registration-form","Set permissions"
10.1,"pm2 logs member-registration","View application logs"
10.2,"pm2 status","Check application status"
10.3,"pm2 restart member-registration","Restart application"
Maintenance.1,"sudo apt update && sudo apt upgrade -y","Update system packages"
Maintenance.2,"cd /var/www/member-registration-form && npm update","Update Node.js packages"
Maintenance.3,"mysqldump -u member_user -p member_registration > backup_$(date +%Y%m%d).sql","Backup database"
Maintenance.4,"pm2 logs member-registration","Check application logs" 